$beige-light: #D0D1CD;
$beige-lighter: #EFF0EB;
$box-padding: 0.5rem;
$box-background-color: $beige-light;
$pink: #FA7C91;

@import "~bulma/sass/utilities/_all";
@import "~bulma/sass/base/_all";
@import "~bulma/sass/elements/_all";
@import "~bulma/sass/form/_all";
@import "~bulma/sass/components/_all";
// @import "~bulma/sass/grid/_all";
@import "~bulma/sass/helpers/_all";
// @import "~bulma/sass/layout/_all";

@import '~bulma-floating-button/dist/css/bulma-floating-button.min.css';

//html {
//  height: 100%;
//}
//body {
//  height: 100%;
//}
//#app {
//  height: 100%;
//  overflow-y: scroll;
//}

.swipe-page {
  display: flex;
  flex-flow: column nowrap;
  height: 100%;
  background-color: $beige-lighter;
}
.hog {
       width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}
.cal-week {
  overflow-y: hidden;
  flex: 1;
  display: flex;
}
.cal-date {
  padding: 1px;
  flex: 1;
  max-width: calc(100% / 7);
}
.task {
  height: 24px;
  transition: height .9s ease, display .9s linear 1s;
  &.d {
  height: 0;
  display: none;
  }
/*  transition: <property> <duration> <timing-function> <delay>; */
}
.my-node {
  height: 24px;
  overflow: hidden;
}
.my-node-exit {
}
.my-node-exit-active {
  height: 0;
  margin: 0;
  transition: height .1s ease-out .4s;
}
.my-node-exit-done {
  height: 0;
  margin: 0;
}
.my-check,.my-check-exit-done,.my-check-enter-done {
  display: none;
}
.my-check-enter,.my-check-exit {
  display: inline;
  opacity: 1;
}
.my-check-enter-active,.my-check-exit-active {
  opacity: 0;
  transition: opacity .2s ease-out .7s;
}
.tasklist {
  flex: 1;
  padding: 0 8px;
}
.taskbox {
  &:not(:last-child) {
    margin-bottom: 0.25rem;
  }
}
.addbutton {
  border-width: 0;
  background-color: $pink;
}
.hoge {
  display: flex;
  flex-flow: column nowrap;
  height: 532px;
  position: relative;
}




//=========
.header {
  position: relative;
  height: 240px;
}
.sticky-header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 240px;
  background-color: red;
}
.sticky-header[data-scroll="in"] {
  position: fixed;
  height: calc((1 - var(--scroll-percent-y) * 2) * 240px);
  max-height: 240px;
  min-height: 120px;
}
//=========
.swipesticky {
  position: relative;
  $stickyheight: 310px;
  height: $stickyheight;

  & > div {
    top: 0;
    left: 0;
    right: 0;
    position: absolute;
    height: $stickyheight;
  }
  &[data-scroll="in"] > div {
    position: fixed;
    height: calc(var(--visible-y) * #{$stickyheight});
    max-height: $stickyheight;
    min-height: 130px;
  }
}
